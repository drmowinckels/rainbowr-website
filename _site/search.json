[
  {
    "objectID": "CoC.html",
    "href": "CoC.html",
    "title": "Code of Conduct",
    "section": "",
    "text": "We as members, contributors, and leaders pledge to make participation in RainbowR a harassment-free experience for everyone, regardless of sexual identity and orientation, sex characteristics, gender identity and expression, age, body size, visible or invisible disability, ethnicity, level of experience, education, socio-economic status, nationality, personal appearance, race, caste, color, or religion.\nWe pledge to act and interact in ways that contribute to an open, welcoming, diverse, inclusive, and healthy community."
  },
  {
    "objectID": "CoC.html#our-standards",
    "href": "CoC.html#our-standards",
    "title": "Code of Conduct",
    "section": "Our Standards",
    "text": "Our Standards\nExamples of behavior that contributes to a positive environment for our community include:\n\nDemonstrating empathy and kindness toward other people\nBeing respectful of differing opinions, viewpoints, and experiences\nGiving and gracefully accepting constructive feedback\nAccepting responsibility and apologizing to those affected by our mistakes, and learning from the experience\nFocusing on what is best not just for us as individuals, but for the overall community\n\nExamples of unacceptable behavior include:\n\nThe use of sexualized language or imagery, and sexual attention or advances of any kind\nTrolling, insulting or derogatory comments, and personal or political attacks\nPublic or private harassment\nOffensive comments related to gender, gender identity and expression, sexual orientation, disability, mental illness, neuro(a)typicality, physical appearance, body size, age, race, or religion\nUnwelcome comments regarding a person’s lifestyle choices and practices, including those related to food, health, parenting, drugs, and employment\nDeliberate misgendering or use of ‘dead’ or rejected names\nPublishing others’ private information, such as a physical or email address, without their explicit permission\nPublication of non-harassing private communication\nThreats of violence\nIncitement of violence towards any individual, including encouraging a person to commit suicide or to engage in self-harm\nDeliberate intimidation\nStalking or following\nHarassing photography or recording, including logging online activity for harassment purposes\nDeliberate “outing” of any aspect of a person’s identity without their consent except as necessary to protect vulnerable people from intentional abuse\nOther conduct which could reasonably be considered inappropriate in a professional setting\n\nRainbowR prioritizes marginalized people’s safety over privileged people’s comfort. Community leaders will not act on complaints regarding:\n\n‘Reverse’ -isms, including ‘reverse racism,’ ‘reverse sexism,’ and ‘cisphobia’\nReasonable communication of boundaries, such as “leave me alone,” “go away,” or “I’m not discussing this with you.”\nCommunicating in a ‘tone’ you don’t find congenial\nCriticizing racist, sexist, cissexist, or otherwise oppressive behavior or assumptions"
  },
  {
    "objectID": "CoC.html#enforcement-responsibilities",
    "href": "CoC.html#enforcement-responsibilities",
    "title": "Code of Conduct",
    "section": "Enforcement Responsibilities",
    "text": "Enforcement Responsibilities\nCommunity leaders are responsible for clarifying and enforcing our standards of acceptable behavior and will take appropriate and fair corrective action in response to any behavior that they deem inappropriate, threatening, offensive, or harmful.\nCommunity leaders have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, and will communicate reasons for moderation decisions when appropriate."
  },
  {
    "objectID": "CoC.html#scope",
    "href": "CoC.html#scope",
    "title": "Code of Conduct",
    "section": "Scope",
    "text": "Scope\nThis Code of Conduct applies within all community spaces, and also applies when an individual is officially representing the community in public spaces. Examples of representing our community include using an official e-mail address, posting via an official social media account, or acting as an appointed representative at an online or offline event."
  },
  {
    "objectID": "CoC.html#enforcement",
    "href": "CoC.html#enforcement",
    "title": "Code of Conduct",
    "section": "Enforcement",
    "text": "Enforcement\nInstances of abusive, harassing, or otherwise unacceptable behavior may be reported to the community leaders responsible for enforcement at rlgbtq@gmail.com.\nAll complaints will be reviewed and investigated promptly and fairly.\nAll community leaders are obligated to respect the privacy and security of the reporter of any incident."
  },
  {
    "objectID": "CoC.html#enforcement-guidelines",
    "href": "CoC.html#enforcement-guidelines",
    "title": "Code of Conduct",
    "section": "Enforcement Guidelines",
    "text": "Enforcement Guidelines\nCommunity leaders will follow these Community Impact Guidelines in determining the consequences for any action they deem in violation of this Code of Conduct:\n\n1. Correction\nCommunity Impact: Use of inappropriate language or other behavior deemed unprofessional or unwelcome in the community.\nConsequence: A private, written warning from community leaders, providing clarity around the nature of the violation and an explanation of why the behavior was inappropriate. A public apology may be requested.\n\n\n2. Warning\nCommunity Impact: A violation through a single incident or series of actions.\nConsequence: A warning with consequences for continued behavior. No interaction with the people involved, including unsolicited interaction with those enforcing the Code of Conduct, for a specified period of time. This includes avoiding interactions in community spaces as well as external channels like social media. Violating these terms may lead to a temporary or permanent ban.\n\n\n3. Temporary Ban\nCommunity Impact: A serious violation of community standards, including sustained inappropriate behavior.\nConsequence: A temporary ban from any sort of interaction or public communication with the community for a specified period of time. No public or private interaction with the people involved, including unsolicited interaction with those enforcing the Code of Conduct, is allowed during this period. Violating these terms may lead to a permanent ban.\n\n\n4. Permanent Ban\nCommunity Impact: Demonstrating a pattern of violation of community standards, including sustained inappropriate behavior, harassment of an individual, or aggression toward or disparagement of classes of individuals.\nConsequence: A permanent ban from any sort of public interaction within the community."
  },
  {
    "objectID": "CoC.html#attribution",
    "href": "CoC.html#attribution",
    "title": "Code of Conduct",
    "section": "Attribution",
    "text": "Attribution\nThis Code of Conduct is adapted from the Contributor Covenant, version 2.1, available at https://www.contributor-covenant.org/version/2/1/code_of_conduct.html and the RLadies Code of Conduct.\nCommunity Impact Guidelines were inspired by Mozilla’s code of conduct enforcement ladder.\nFor answers to common questions about the Contributor Covenant, see the FAQ at https://www.contributor-covenant.org/faq. Translations are available at https://www.contributor-covenant.org/translations."
  },
  {
    "objectID": "RainbowRelaunch.html",
    "href": "RainbowRelaunch.html",
    "title": "RainbowR",
    "section": "",
    "text": "make RainbowR like RLadies (welcoming, positive learning)\n\n\n\n\n\nLGBTQ+ datasets\nmentoring and support for new learners\ninternational (not geographically focused)\nsupport community (feel safe) + allyships\nall activities online for full participation\nbuild links with Python and Julia, Queer in AI\n\n\n\n\n\nHackathons\nmeetup tutorials\nTidyTuesday like events\nprojects short/long term on LGBTQ issues\nSlack office hours\ntutorial on Rpkgs\nLGBTQ color palette based on pride flags\nSupport meetings + 1:1 counselling\nSeminars on data/coding ethics & inclusive practices\n\n\n\n\n\nsteps to get involved\nguest posts\ndata analyses with LGBTQ+ datasets\nRainbowR colors = who we are\n\n\n\n\n\nhost on GitHub inclusive datasets\nKelsey Campbell (Gayta Science) - https://www.gaytascience.com/\nTwitter API\nhttp://www.lgbtdata.com/data.html\nhttps://opendata.stackexchange.com/questions/6961/looking-for-open-source-lgbt-datasets\nhttps://guides.library.ucla.edu/lgbt/statistics\nhttps://libguides.gvsu.edu/c.php?g=108409&p=8294841\nGender neutral bathrooms\nsame sex marriage\n\n\n\n\n\nan illustrator\nGitHub maintainer\nR pkg dev\ncode and datasets\ninclusive bioinformatic conference"
  },
  {
    "objectID": "posts/post-with-code/index.html",
    "href": "posts/post-with-code/index.html",
    "title": "Blog Post With Code",
    "section": "",
    "text": "Welcome to RainbowR blog post! You have a blog post idea that has LGBTQ data and want the community to see it? Here is now the data will look on this blog within the RainbowR theme.\nFor this demo post, we will show what Star Wars data looks like."
  },
  {
    "objectID": "posts/post-with-code/index.html#star-wars",
    "href": "posts/post-with-code/index.html#star-wars",
    "title": "Blog Post With Code",
    "section": "Star Wars",
    "text": "Star Wars\nLet us look at Star Wars inside a blog\n\n\nCode\nlibrary(tidyverse)\nlibrary(paletteer)\nstarwars = starwars\n\nggplot(\n  starwars,\n  aes(x= height, y= eye_color, color=height)\n)+\n  geom_point(size= 2)+\n  scale_color_paletteer_c(`\"ggthemes::Orange\"`)+\n  rainbow_theme()\n\n\n\n\n\nThis ggplot shows Star Wars height vs eye color of the characters, the geom_point() colors really work well with oranges against the purple background."
  },
  {
    "objectID": "posts/Excel-tutorial/MessyExcel.html",
    "href": "posts/Excel-tutorial/MessyExcel.html",
    "title": "Messy Excel Tables",
    "section": "",
    "text": "Finding LGBTQ datasets in the world, I often find .xlsx files, these are often very messy or formatted in a way that is less than ideal. This blog will show how to convert the Excel spreadsheet into a tidyverse dataset."
  },
  {
    "objectID": "posts/Excel-tutorial/MessyExcel.html#book-tutorial",
    "href": "posts/Excel-tutorial/MessyExcel.html#book-tutorial",
    "title": "Messy Excel Tables",
    "section": "Book Tutorial",
    "text": "Book Tutorial\nWe will first use a eBook tutorial Spreadsheet Munging Strategies but I will provide details on each step of the process. The data tables for this tutorial are Australian Bureau of Statistics, download the data here.\nThe data tables look like this \n Notice on the left side the rows have nested State Divisions with regions, and the columns are response and participants.\n\nLibraries\n\nlibrary(tidyverse)\nlibrary(readxl)\nlibrary(tidyxl)\n# install.packages('unpivotr')\nlibrary(unpivotr)\n\n\n\nData tables\n\ncells = xlsx_cells(\"ozmarriage.xlsx\")\ncells\n\n# A tibble: 4,699 × 21\n   sheet    address   row   col is_blank data_type error logical numeric\n   <chr>    <chr>   <int> <int> <lgl>    <chr>     <chr> <lgl>     <dbl>\n 1 Contents A1          1     1 FALSE    character <NA>  NA           NA\n 2 Contents B1          1     2 TRUE     blank     <NA>  NA           NA\n 3 Contents C1          1     3 TRUE     blank     <NA>  NA           NA\n 4 Contents D1          1     4 TRUE     blank     <NA>  NA           NA\n 5 Contents E1          1     5 TRUE     blank     <NA>  NA           NA\n 6 Contents F1          1     6 TRUE     blank     <NA>  NA           NA\n 7 Contents G1          1     7 TRUE     blank     <NA>  NA           NA\n 8 Contents H1          1     8 TRUE     blank     <NA>  NA           NA\n 9 Contents I1          1     9 TRUE     blank     <NA>  NA           NA\n10 Contents J1          1    10 TRUE     blank     <NA>  NA           NA\n# … with 4,689 more rows, and 12 more variables: date <dttm>, character <chr>,\n#   character_formatted <list>, formula <chr>, is_array <lgl>,\n#   formula_ref <chr>, formula_group <int>, comment <chr>, height <dbl>,\n#   width <dbl>, style_format <chr>, local_format_id <int>\n\n# allows for getting table formatting \nformats = xlsx_formats(\"ozmarriage.xlsx\")\n\nThe whole Excel data is 4699 rows and 21 variables, all table (sheets) combined. We want to just get table 1.\n\n# Table 1\ncells %>% \n  filter(sheet == \"Table 1\", row >= 5L, !is_blank)\n\n# A tibble: 162 × 21\n   sheet   address   row   col is_blank data_type error logical numeric\n   <chr>   <chr>   <int> <int> <lgl>    <chr>     <chr> <lgl>     <dbl>\n 1 Table 1 B5          5     2 FALSE    character <NA>  NA           NA\n 2 Table 1 I5          5     9 FALSE    character <NA>  NA           NA\n 3 Table 1 B6          6     2 FALSE    character <NA>  NA           NA\n 4 Table 1 D6          6     4 FALSE    character <NA>  NA           NA\n 5 Table 1 F6          6     6 FALSE    character <NA>  NA           NA\n 6 Table 1 I6          6     9 FALSE    character <NA>  NA           NA\n 7 Table 1 K6          6    11 FALSE    character <NA>  NA           NA\n 8 Table 1 M6          6    13 FALSE    character <NA>  NA           NA\n 9 Table 1 O6          6    15 FALSE    character <NA>  NA           NA\n10 Table 1 B7          7     2 FALSE    character <NA>  NA           NA\n# … with 152 more rows, and 12 more variables: date <dttm>, character <chr>,\n#   character_formatted <list>, formula <chr>, is_array <lgl>,\n#   formula_ref <chr>, formula_group <int>, comment <chr>, height <dbl>,\n#   width <dbl>, style_format <chr>, local_format_id <int>\n\n\nSo far this looks like nothing like the picture, so we will need pull out the column headers by using the unpivotr::behead() function to chop away all that formatting. The image below will help make sense of what is being beheaded.\n\n\n\ntable 2\n\n\nThe image shows Table 2 as it is similar to table 1, except for the nested regions under state. The column names we will use are basic generalized variables of what the columns store, name the column response instead of “response clear” and population instead of “eligible participants”. The regions under state will be moved.\n\n\nStep 2\nUsing the image above as a guide in what we are chopping is the response and population columns, the direction of where they are located is important to have. These beheaded columns are at the end of the data table, but will be moved soon.\n\ncells %>% \n  filter(sheet == \"Table 1\", row >= 5L, !is_blank) %>% \n  behead(\"up-left\",'population') %>% \n  behead('up-left','response')\n\n# A tibble: 153 × 23\n   sheet   address   row   col is_blank data_type error logical   numeric\n   <chr>   <chr>   <int> <int> <lgl>    <chr>     <chr> <lgl>       <dbl>\n 1 Table 1 B7          7     2 FALSE    character <NA>  NA           NA  \n 2 Table 1 C7          7     3 FALSE    character <NA>  NA           NA  \n 3 Table 1 B8          8     2 FALSE    numeric   <NA>  NA      2374362  \n 4 Table 1 C8          8     3 FALSE    numeric   <NA>  NA           57.8\n 5 Table 1 B9          9     2 FALSE    numeric   <NA>  NA      2145629  \n 6 Table 1 C9          9     3 FALSE    numeric   <NA>  NA           64.9\n 7 Table 1 B10        10     2 FALSE    numeric   <NA>  NA      1487060  \n 8 Table 1 C10        10     3 FALSE    numeric   <NA>  NA           60.7\n 9 Table 1 B11        11     2 FALSE    numeric   <NA>  NA       592528  \n10 Table 1 C11        11     3 FALSE    numeric   <NA>  NA           62.5\n# … with 143 more rows, and 14 more variables: date <dttm>, character <chr>,\n#   character_formatted <list>, formula <chr>, is_array <lgl>,\n#   formula_ref <chr>, formula_group <int>, comment <chr>, height <dbl>,\n#   width <dbl>, style_format <chr>, local_format_id <int>, population <chr>,\n#   response <chr>\n\n\n\n\nStep 3\nThis step we are grabbing the no. and % columns underneath the response and population columns. The unit column will be nested and is placed at the end of the data table.\n\ncells %>% \n  filter(sheet == \"Table 1\", row >= 5L, !is_blank) %>% \n  behead(\"up-left\",'population') %>% \n  behead('up-left','response') %>% \n  behead('up','unit')\n\n# A tibble: 139 × 24\n   sheet   address   row   col is_blank data_type error logical   numeric\n   <chr>   <chr>   <int> <int> <lgl>    <chr>     <chr> <lgl>       <dbl>\n 1 Table 1 B8          8     2 FALSE    numeric   <NA>  NA      2374362  \n 2 Table 1 C8          8     3 FALSE    numeric   <NA>  NA           57.8\n 3 Table 1 B9          9     2 FALSE    numeric   <NA>  NA      2145629  \n 4 Table 1 C9          9     3 FALSE    numeric   <NA>  NA           64.9\n 5 Table 1 B10        10     2 FALSE    numeric   <NA>  NA      1487060  \n 6 Table 1 C10        10     3 FALSE    numeric   <NA>  NA           60.7\n 7 Table 1 B11        11     2 FALSE    numeric   <NA>  NA       592528  \n 8 Table 1 C11        11     3 FALSE    numeric   <NA>  NA           62.5\n 9 Table 1 B12        12     2 FALSE    numeric   <NA>  NA       801575  \n10 Table 1 C12        12     3 FALSE    numeric   <NA>  NA           63.7\n# … with 129 more rows, and 15 more variables: date <dttm>, character <chr>,\n#   character_formatted <list>, formula <chr>, is_array <lgl>,\n#   formula_ref <chr>, formula_group <int>, comment <chr>, height <dbl>,\n#   width <dbl>, style_format <chr>, local_format_id <int>, population <chr>,\n#   response <chr>, unit <chr>\n\n\n\n\nStep 4\nThis step is grabbing the states located on the left side. The left location is left of the formatted columns, there will often be 2 left columns next to each other, yet the locations for behead() are left. The state is placed at the end of the data table.\n\ncells %>% \n  filter(sheet == \"Table 1\", row >= 5L, !is_blank) %>% \n  behead(\"up-left\",'population') %>% \n  behead('up-left','response') %>% \n  behead('up','unit') %>% \n  behead('left','state') %>% \n  arrange(row, col)\n\n# A tibble: 126 × 25\n   sheet   address   row   col is_blank data_type error logical   numeric\n   <chr>   <chr>   <int> <int> <lgl>    <chr>     <chr> <lgl>       <dbl>\n 1 Table 1 B8          8     2 FALSE    numeric   <NA>  NA      2374362  \n 2 Table 1 C8          8     3 FALSE    numeric   <NA>  NA           57.8\n 3 Table 1 D8          8     4 FALSE    numeric   <NA>  NA      1736838  \n 4 Table 1 E8          8     5 FALSE    numeric   <NA>  NA           42.2\n 5 Table 1 F8          8     6 FALSE    numeric   <NA>  NA      4111200  \n 6 Table 1 G8          8     7 FALSE    numeric   <NA>  NA          100  \n 7 Table 1 I8          8     9 FALSE    numeric   <NA>  NA      4111200  \n 8 Table 1 J8          8    10 FALSE    numeric   <NA>  NA           79.2\n 9 Table 1 K8          8    11 FALSE    numeric   <NA>  NA        11036  \n10 Table 1 L8          8    12 FALSE    numeric   <NA>  NA            0.2\n# … with 116 more rows, and 16 more variables: date <dttm>, character <chr>,\n#   character_formatted <list>, formula <chr>, is_array <lgl>,\n#   formula_ref <chr>, formula_group <int>, comment <chr>, height <dbl>,\n#   width <dbl>, style_format <chr>, local_format_id <int>, population <chr>,\n#   response <chr>, unit <chr>, state <chr>\n\n\n\n\nStep 5\nIn this step we arrange the data table by row and column, selecting the columns we want from the Excel data table. The columns row, data_type and numeric are required here, before the selection of the columns. You will see that unit remains nested.\n\ncells %>% \n  filter(sheet == \"Table 1\", row >= 5L, !is_blank) %>% \n  behead(\"up-left\",'population') %>% \n  behead('up-left','response') %>% \n  behead('up','unit') %>% \n  behead('left','state') %>% \n  arrange(row, col) %>% \n  select( row, data_type, numeric, # required columns\n          state, population, response, unit\n          )\n\n# A tibble: 126 × 7\n     row data_type   numeric state           population           response unit \n   <int> <chr>         <dbl> <chr>           <chr>                <chr>    <chr>\n 1     8 numeric   2374362   New South Wales Response clear       Yes      no.  \n 2     8 numeric        57.8 New South Wales Response clear       Yes      %    \n 3     8 numeric   1736838   New South Wales Response clear       No       no.  \n 4     8 numeric        42.2 New South Wales Response clear       No       %    \n 5     8 numeric   4111200   New South Wales Response clear       Total    no.  \n 6     8 numeric       100   New South Wales Response clear       Total    %    \n 7     8 numeric   4111200   New South Wales Eligible Participan… Respons… no.  \n 8     8 numeric        79.2 New South Wales Eligible Participan… Respons… %    \n 9     8 numeric     11036   New South Wales Eligible Participan… Respons… no.  \n10     8 numeric         0.2 New South Wales Eligible Participan… Respons… %    \n# … with 116 more rows\n\n# the rows of states are now a column !!!\n\n\n\nStep 6\nIn step 5 we grabbed the columns we wanted, along with the ones we rather not have like the row and data_type. The column numeric held the numeric data we care about. To unnest the unit column that has % and no., we use spatter() function, which will move them into separated columns.\nThis step we want the units separated and to have state as first column. We have a tidy data table, which could be saved as a .csv file. We selected our columns in the order we want, spatter() the nested column into separate column, and to drop the row column.\n\ncells %>% \n  filter(sheet == \"Table 1\", row >= 5L, !is_blank) %>% \n  behead(\"up-left\",'population') %>% \n  behead('up-left','response') %>% \n  behead('up','unit') %>% \n  behead('left','state') %>% \n  arrange(row, col) %>% \n  select( row, data_type, numeric, state, population, response, unit) %>% \n  spatter(unit) %>% # breaks up the % no. into columns\n  select(-row)\n\n# A tibble: 63 × 5\n   state           population            response                  `%`     no.\n   <chr>           <chr>                 <chr>                   <dbl>   <dbl>\n 1 New South Wales Eligible Participants \"Non-responding\"         20.5 1065445\n 2 New South Wales Eligible Participants \"Response clear\"         79.2 4111200\n 3 New South Wales Eligible Participants \"Response not clear(a)\"   0.2   11036\n 4 New South Wales Eligible Participants \"Total \"                100   5187681\n 5 New South Wales Response clear        \"No\"                     42.2 1736838\n 6 New South Wales Response clear        \"Total\"                 100   4111200\n 7 New South Wales Response clear        \"Yes\"                    57.8 2374362\n 8 Victoria        Eligible Participants \"Non-responding\"         18.3  743634\n 9 Victoria        Eligible Participants \"Response clear\"         81.4 3306727\n10 Victoria        Eligible Participants \"Response not clear(a)\"   0.3   11028\n# … with 53 more rows"
  },
  {
    "objectID": "posts/first-post/firstpost.html#start-writing-blogs",
    "href": "posts/first-post/firstpost.html#start-writing-blogs",
    "title": "Your 1st Blog Post",
    "section": "Start writing blogs",
    "text": "Start writing blogs\nThis is how to start writing blogs for RainbowR. First off, since this is a R language based community you can write your blog post in .Rmd files or Quarto .qmd files. Both types of files render with no problems.\nRainbowR is a Quarto based blog, so this means we need a few things from you in order for your post to succeed in getting posted. Here is a list of items to include when submitting a post:\n\ncreate a folder, name it\ncreate a .Rmd or .qmd file\ncreate a README markdown file, this is where you provide context to your data and post, including color (hex values) for ggplot output\nplace all data in this folder or ensure that the url you provide is working and is stated in your README file\ninclude images related to post, but not the ggplot output ones, those will be rendered with RainbowR theme."
  },
  {
    "objectID": "posts/first-post/firstpost.html#check-your-output",
    "href": "posts/first-post/firstpost.html#check-your-output",
    "title": "Your 1st Blog Post",
    "section": "Check your output",
    "text": "Check your output\nHaving a dark purple background blog comes with some colors better suited for ggplot output, to help define what color palettes or hex values to provide in your README file, the blog purple background color is #1A0933. To quickly see what ggplot output looks like, see the post with code post."
  },
  {
    "objectID": "posts/history/history.html",
    "href": "posts/history/history.html",
    "title": "RainbowR History",
    "section": "",
    "text": "The RainbowR origin story …"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "RainbowR",
    "section": "",
    "text": "RainbowR is a community that supports, promotes and connects LGBTQ+ people who code in the R language.\nNot every work or social environment is safe or supportive for LGBTQ+ people, so the need to have a dedicated community continues.\nWe use LGBTQ+ people as a term to cover\n\nthose who identify as being a minority sexual orientation, i.e. those who are not straight/heterosexual\nthose who are not cisgender, i.e. those whose sense of personal identity and gender does not correspond with their birth sex\n\nTo our straight, cis friends: we very much appreciate your allyship and your support of RainbowR, e.g. by sharing our information and posts on social media and by telling your friends and colleagues about us.\n\n\nOur mission is to support, promote and connect LGBTQ+ people in the R community and to and spread awareness of LGBTQ+ issues through data-driven activism.\n\n\n\nIf you want to get involved, please click below (COMING SOON!) for an invitation to our Slack. Please note that this group is for LGBTQ+ people.\nWe welcome everyone, LGBTQ+ or not, who is interested in promoting LGBTQ+ people and issues in the R community and beyond, to follow and engage with us on Twitter, @R_LGBTQ.\n\n\n\nWe partner with fellow R diversity and inclusion-orientated groups such as R Forwards and Minorities in R (MiR)."
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "Blog",
    "section": "",
    "text": "Blog Post\n\n\nRainbowR\n\n\n\n\nLearn how to make your 1st blog post on RainbowR blog!\n\n\n\n\n\n\nMay 31, 2022\n\n\nZane (She/They)\n\n\n\n\n\n\n  \n\n\n\n\n\n\n\n\n\nexcel\n\n\ndata tables\n\n\nanalysis\n\n\n\n\nClean messy heavily formatted Excel spreadsheets and tables.\n\n\n\n\n\n\nMay 26, 2022\n\n\nZane Dax (She/They)\n\n\n\n\n\n\n  \n\n\n\n\n\n\n\n\n\nStar Wars\n\n\ncode\n\n\nanalysis\n\n\n\n\nRun R code inside your Blog post, inside R code chunks.\n\n\n\n\n\n\nMay 11, 2022\n\n\nZane (She/They)\n\n\n\n\n\n\n  \n\n\n\n\n\n\n\n\n\nHistory\n\n\nRainbowR\n\n\n\n\nLearn about the history of RainbowR and how it came to be.\n\n\n\n\n\n\nMay 11, 2022\n\n\nElla (She/Her)\n\n\n\n\n\n\nNo matching items"
  }
]